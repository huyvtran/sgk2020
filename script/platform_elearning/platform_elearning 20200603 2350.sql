--
-- Script was generated by Devart dbForge Studio for MySQL, Version 8.0.40.0
-- Product home page: http://www.devart.com/dbforge/mysql/studio
-- Script date 6/3/2020 11:50:19 PM
-- Server version: 8.0.19
-- Client version: 4.1
--

-- 
-- Disable foreign keys
-- 
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;

-- 
-- Set SQL mode
-- 
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;

-- 
-- Set character set the client will use to send SQL statements to the server
--
SET NAMES 'utf8mb4';

--
-- Set default database
--
USE platform_elearning;

--
-- Drop procedure `Proc_Subject_INSERT`
--
DROP PROCEDURE IF EXISTS Proc_Subject_INSERT;

--
-- Drop procedure `Proc_Subject_Update`
--
DROP PROCEDURE IF EXISTS Proc_Subject_Update;

--
-- Drop table `subject`
--
DROP TABLE IF EXISTS subject;

--
-- Drop procedure `Proc_Auditing_Log_INSERT`
--
DROP PROCEDURE IF EXISTS Proc_Auditing_Log_INSERT;

--
-- Drop procedure `Proc_Auditing_Log_Update`
--
DROP PROCEDURE IF EXISTS Proc_Auditing_Log_Update;

--
-- Drop table `auditing_log`
--
DROP TABLE IF EXISTS auditing_log;

--
-- Drop procedure `Proc_Class_INSERT`
--
DROP PROCEDURE IF EXISTS Proc_Class_INSERT;

--
-- Drop procedure `Proc_Class_Update`
--
DROP PROCEDURE IF EXISTS Proc_Class_Update;

--
-- Drop table `class`
--
DROP TABLE IF EXISTS class;

--
-- Drop procedure `Proc_Lesson_INSERT`
--
DROP PROCEDURE IF EXISTS Proc_Lesson_INSERT;

--
-- Drop procedure `Proc_Lesson_Update`
--
DROP PROCEDURE IF EXISTS Proc_Lesson_Update;

--
-- Drop table `lesson`
--
DROP TABLE IF EXISTS lesson;

--
-- Drop procedure `Proc_Program_INSERT`
--
DROP PROCEDURE IF EXISTS Proc_Program_INSERT;

--
-- Drop procedure `Proc_Program_Update`
--
DROP PROCEDURE IF EXISTS Proc_Program_Update;

--
-- Drop table `program`
--
DROP TABLE IF EXISTS program;

--
-- Drop procedure `Proc_Topic_INSERT`
--
DROP PROCEDURE IF EXISTS Proc_Topic_INSERT;

--
-- Drop procedure `Proc_Topic_Update`
--
DROP PROCEDURE IF EXISTS Proc_Topic_Update;

--
-- Drop table `topic`
--
DROP TABLE IF EXISTS topic;

--
-- Set default database
--
USE platform_elearning;

--
-- Create table `topic`
--
CREATE TABLE topic (
  ID int NOT NULL AUTO_INCREMENT,
  TopicName varchar(255) DEFAULT NULL,
  SubjectID int DEFAULT NULL,
  CreatedDate datetime DEFAULT NULL,
  CreatedBy varchar(255) DEFAULT NULL,
  ModifiedDate datetime DEFAULT NULL,
  ModifiedBy varchar(255) DEFAULT NULL,
  PRIMARY KEY (ID)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci,
COMMENT = 'lưu thông chủ đề học: ví dụ lớp toán 1> đọc đếm tới 10';

DELIMITER $$

--
-- Create procedure `Proc_Topic_Update`
--
CREATE PROCEDURE Proc_Topic_Update (IN v_ID int,
IN v_TopicName varchar(255),
IN v_CreatedDate datetime,
IN v_CreatedBy varchar(255),
IN v_ModifiedDate datetime,
IN v_ModifiedBy varchar(255))
SQL SECURITY INVOKER
COMMENT 'Proc cập nhật bảng topic'
BEGIN
  UPDATE topic
  SET `TopicName` = v_TopicName,
      `CreatedDate` = v_CreatedDate,
      `CreatedBy` = v_CreatedBy,
      `ModifiedDate` = v_ModifiedDate,
      `ModifiedBy` = v_ModifiedBy
  WHERE ID = v_ID
  AND TenantID = v_TenantID;
END
$$

--
-- Create procedure `Proc_Topic_INSERT`
--
CREATE PROCEDURE Proc_Topic_INSERT (IN v_ID int,
IN v_TopicName varchar(255),
IN v_CreatedDate datetime,
IN v_CreatedBy varchar(255),
IN v_ModifiedDate datetime,
IN v_ModifiedBy varchar(255))
SQL SECURITY INVOKER
COMMENT 'Proc thêm mới bảng topic'
BEGIN
  INSERT INTO topic (`TopicName`,
  `CreatedDate`,
  `CreatedBy`,
  `ModifiedDate`,
  `ModifiedBy`)
    VALUES (v_TopicName, v_CreatedDate, v_CreatedBy, v_ModifiedDate, v_ModifiedBy);
  SELECT
    LAST_INSERT_ID();
END
$$

DELIMITER ;

--
-- Create table `program`
--
CREATE TABLE program (
  ID int NOT NULL AUTO_INCREMENT,
  ProgramName varchar(1000) DEFAULT NULL COMMENT 'tên chương trình học',
  CreatedDate datetime DEFAULT NULL,
  CreatedBy varchar(255) DEFAULT NULL,
  ModifiedDate datetime DEFAULT NULL,
  ModifiedBy varchar(255) DEFAULT NULL,
  TenantID varchar(255) DEFAULT NULL,
  PRIMARY KEY (ID)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci,
COMMENT = 'lưu thông tin chương trình học: vd cấp 3';

DELIMITER $$

--
-- Create procedure `Proc_Program_Update`
--
CREATE PROCEDURE Proc_Program_Update (IN v_ID int,
IN v_ProgramName varchar(255),
IN v_CreatedDate datetime,
IN v_CreatedBy varchar(255),
IN v_ModifiedDate datetime,
IN v_ModifiedBy varchar(255),
IN v_TenantID varchar(255))
SQL SECURITY INVOKER
COMMENT 'Proc cập nhật bảng program'
BEGIN
  UPDATE program
  SET `ProgramName` = v_ProgramName,
      `CreatedDate` = v_CreatedDate,
      `CreatedBy` = v_CreatedBy,
      `ModifiedDate` = v_ModifiedDate,
      `ModifiedBy` = v_ModifiedBy,
      `TenantID` = v_TenantID
  WHERE ID = v_ID
  AND TenantID = v_TenantID;
END
$$

--
-- Create procedure `Proc_Program_INSERT`
--
CREATE PROCEDURE Proc_Program_INSERT (IN v_ID int,
IN v_ProgramName varchar(255),
IN v_CreatedDate datetime,
IN v_CreatedBy varchar(255),
IN v_ModifiedDate datetime,
IN v_ModifiedBy varchar(255),
IN v_TenantID varchar(255))
SQL SECURITY INVOKER
COMMENT 'Proc thêm mới bảng program'
BEGIN
  INSERT INTO program (`ProgramName`,
  `CreatedDate`,
  `CreatedBy`,
  `ModifiedDate`,
  `ModifiedBy`,
  `TenantID`)
    VALUES (v_ProgramName, v_CreatedDate, v_CreatedBy, v_ModifiedDate, v_ModifiedBy, v_TenantID);
  SELECT
    LAST_INSERT_ID();
END
$$

DELIMITER ;

--
-- Create table `lesson`
--
CREATE TABLE lesson (
  ID int NOT NULL AUTO_INCREMENT,
  LessonName varchar(255) DEFAULT NULL,
  TopicID int DEFAULT NULL,
  SubjectID int DEFAULT NULL,
  CreatedDate datetime DEFAULT NULL,
  CreatedBy varchar(255) DEFAULT NULL,
  ModifiedDate datetime DEFAULT NULL,
  ModifiedBy varchar(255) DEFAULT NULL,
  TenantID varchar(255) DEFAULT NULL,
  PRIMARY KEY (ID)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci,
COMMENT = 'lưu thông tin bài học: ví dụ lớp toán 1> đọc đếm tới 10> đếm số cừu';

DELIMITER $$

--
-- Create procedure `Proc_Lesson_Update`
--
CREATE PROCEDURE Proc_Lesson_Update (IN v_ID int,
IN v_LessonName varchar(255),
IN v_CreatedDate datetime,
IN v_CreatedBy varchar(255),
IN v_ModifiedDate datetime,
IN v_ModifiedBy varchar(255),
IN v_TenantID varchar(255))
SQL SECURITY INVOKER
COMMENT 'Proc cập nhật bảng lesson'
BEGIN
  UPDATE lesson
  SET `LessonName` = v_LessonName,
      `CreatedDate` = v_CreatedDate,
      `CreatedBy` = v_CreatedBy,
      `ModifiedDate` = v_ModifiedDate,
      `ModifiedBy` = v_ModifiedBy,
      `TenantID` = v_TenantID
  WHERE ID = v_ID
  AND TenantID = v_TenantID;
END
$$

--
-- Create procedure `Proc_Lesson_INSERT`
--
CREATE PROCEDURE Proc_Lesson_INSERT (IN v_ID int,
IN v_LessonName varchar(255),
IN v_CreatedDate datetime,
IN v_CreatedBy varchar(255),
IN v_ModifiedDate datetime,
IN v_ModifiedBy varchar(255),
IN v_TenantID varchar(255))
SQL SECURITY INVOKER
COMMENT 'Proc thêm mới bảng lesson'
BEGIN
  INSERT INTO lesson (`LessonName`,
  `CreatedDate`,
  `CreatedBy`,
  `ModifiedDate`,
  `ModifiedBy`,
  `TenantID`)
    VALUES (v_LessonName, v_CreatedDate, v_CreatedBy, v_ModifiedDate, v_ModifiedBy, v_TenantID);
  SELECT
    LAST_INSERT_ID();
END
$$

DELIMITER ;

--
-- Create table `class`
--
CREATE TABLE class (
  ID int NOT NULL AUTO_INCREMENT,
  ClassName bigint DEFAULT NULL,
  ProgramID int DEFAULT NULL COMMENT 'lớp học thuộc chương trình học',
  CreatedDate datetime DEFAULT NULL,
  CreatedBy varchar(255) DEFAULT NULL,
  ModifiedDate datetime DEFAULT NULL,
  ModifiedBy varchar(255) DEFAULT NULL,
  TenantID varchar(255) DEFAULT NULL,
  PRIMARY KEY (ID)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci,
COMMENT = 'lưu thông tin lớp học';

DELIMITER $$

--
-- Create procedure `Proc_Class_Update`
--
CREATE PROCEDURE Proc_Class_Update (IN v_ID int,
IN v_ClassName varchar(255),
IN v_CreatedDate datetime,
IN v_CreatedBy varchar(255),
IN v_ModifiedDate datetime,
IN v_ModifiedBy varchar(255),
IN v_TenantID varchar(255))
SQL SECURITY INVOKER
COMMENT 'Proc cập nhật bảng class'
BEGIN
  UPDATE class
  SET `ClassName` = v_ClassName,
      `CreatedDate` = v_CreatedDate,
      `CreatedBy` = v_CreatedBy,
      `ModifiedDate` = v_ModifiedDate,
      `ModifiedBy` = v_ModifiedBy,
      `TenantID` = v_TenantID
  WHERE ID = v_ID
  AND TenantID = v_TenantID;
END
$$

--
-- Create procedure `Proc_Class_INSERT`
--
CREATE PROCEDURE Proc_Class_INSERT (IN v_ID int,
IN v_ClassName varchar(255),
IN v_CreatedDate datetime,
IN v_CreatedBy varchar(255),
IN v_ModifiedDate datetime,
IN v_ModifiedBy varchar(255),
IN v_TenantID varchar(255))
SQL SECURITY INVOKER
COMMENT 'Proc thêm mới bảng class'
BEGIN
  INSERT INTO class (`ClassName`,
  `CreatedDate`,
  `CreatedBy`,
  `ModifiedDate`,
  `ModifiedBy`,
  `TenantID`)
    VALUES (v_ClassName, v_CreatedDate, v_CreatedBy, v_ModifiedDate, v_ModifiedBy, v_TenantID);
  SELECT
    LAST_INSERT_ID();
END
$$

DELIMITER ;

--
-- Create table `auditing_log`
--
CREATE TABLE auditing_log (
  AuditingLogID int NOT NULL AUTO_INCREMENT COMMENT 'Khóa chính',
  ModelID int DEFAULT NULL,
  UserID char(36) DEFAULT NULL COMMENT 'ID của user',
  ParentEntityID varchar(36) DEFAULT NULL COMMENT 'Id của bản ghi master',
  FullName varchar(255) DEFAULT NULL COMMENT 'Họ và tên user thực hiện thao tác',
  LogTime datetime DEFAULT NULL COMMENT 'Thời gian thực hiện thao tác',
  Action smallint DEFAULT NULL COMMENT '1: Thêm mới,2: Sửa,3: Xóa',
  Description text DEFAULT NULL COMMENT 'Mô tả chi tiết hành động',
  ModelInfo varchar(255) DEFAULT NULL COMMENT 'Tên thực thể thay đổi',
  SubSystemName varchar(255) DEFAULT NULL COMMENT 'Tên phân hệ thao tác',
  TableName varchar(100) DEFAULT NULL COMMENT 'Tên bảng phát sinh việc ghi log',
  DeviceType smallint DEFAULT 0,
  CreatedBy varchar(100) DEFAULT NULL COMMENT 'Người tạo',
  CreatedDate datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Ngày tạo',
  ModifiedBy varchar(100) DEFAULT NULL COMMENT 'Người sửa',
  ModifiedDate datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Ngày tạo',
  IsSytem bit(1) DEFAULT NULL COMMENT 'Log cấm xóa nếu =1 , ngược lại thì cho xóa',
  TenantID char(36) DEFAULT NULL COMMENT 'ID Công ty',
  OldValue text DEFAULT NULL COMMENT 'Giá trị cũ',
  NewValue text DEFAULT NULL COMMENT 'Giá trị mới',
  PRIMARY KEY (AuditingLogID)
)
ENGINE = INNODB,
AUTO_INCREMENT = 11342,
AVG_ROW_LENGTH = 316,
CHARACTER SET utf8,
COLLATE utf8_general_ci;

DELIMITER $$

--
-- Create procedure `Proc_Auditing_Log_Update`
--
CREATE PROCEDURE Proc_Auditing_Log_Update (IN v_AuditingLogID varchar(36),
IN v_EntityID varchar(36),
IN v_UserID int(20),
IN v_ParentEntityID varchar(36),
IN v_FullName varchar(255),
IN v_LogTime datetime,
IN v_Action smallint(255),
IN v_Description text,
IN v_EntityInfo varchar(255),
IN v_SubSystemName varchar(255),
IN v_TableName varchar(100),
IN v_DeviceType smallint(1),
IN v_CreatedBy varchar(100),
IN v_CreatedDate datetime,
IN v_ModifiedBy varchar(100),
IN v_ModifiedDate datetime,
IN v_IsSytem bit(1),
IN v_TenantID char(36))
SQL SECURITY INVOKER
COMMENT 'Proc cập nhật bảng auditing_log'
BEGIN
  UPDATE auditing_log
  SET `EntityID` = v_EntityID,
      `UserID` = v_UserID,
      `ParentEntityID` = v_ParentEntityID,
      `FullName` = v_FullName,
      `LogTime` = v_LogTime,
      `Action` = v_Action,
      `Description` = v_Description,
      `EntityInfo` = v_EntityInfo,
      `SubSystemName` = v_SubSystemName,
      `TableName` = v_TableName,
      `DeviceType` = v_DeviceType,
      `CreatedBy` = v_CreatedBy,
      `CreatedDate` = v_CreatedDate,
      `ModifiedBy` = v_ModifiedBy,
      `ModifiedDate` = v_ModifiedDate,
      `IsSytem` = v_IsSytem,
      `TenantID` = v_TenantID
  WHERE AuditingLogID = v_AuditingLogID
  AND TenantID = v_TenantID;
END
$$

--
-- Create procedure `Proc_Auditing_Log_INSERT`
--
CREATE PROCEDURE Proc_Auditing_Log_INSERT (IN v_ModelID varchar(36),
IN v_UserID int(20),
IN v_ParentEntityID varchar(36),
IN v_FullName varchar(255),
IN v_LogTime datetime,
IN v_Action smallint(255),
IN v_Description text,
IN v_ModelInfo varchar(255),
IN v_SubSystemName varchar(255),
IN v_TableName varchar(100),
IN v_DeviceType smallint(1),
IN v_CreatedBy varchar(100),
IN v_CreatedDate datetime,
IN v_ModifiedBy varchar(100),
IN v_ModifiedDate datetime,
IN v_IsSytem bit(1),
IN v_TenantID char(36))
SQL SECURITY INVOKER
COMMENT 'Proc thêm mới bảng auditing_log'
BEGIN
  INSERT INTO auditing_log (`ModelID`,
  `UserID`,
  `ParentEntityID`,
  `FullName`,
  `LogTime`,
  `Action`,
  `Description`,
  `ModelInfo`,
  `SubSystemName`,
  `TableName`,
  `DeviceType`,
  `CreatedBy`,
  `CreatedDate`,
  `ModifiedBy`,
  `ModifiedDate`,
  `IsSytem`,
  `TenantID`)
    VALUES (v_ModelID, v_UserID, v_ParentEntityID, v_FullName, v_LogTime, v_Action, v_Description, v_ModelInfo, v_SubSystemName, v_TableName, v_DeviceType, v_CreatedBy, v_CreatedDate, v_ModifiedBy, v_ModifiedDate, v_IsSytem, v_TenantID);
  SELECT
    LAST_INSERT_ID();
END
$$

DELIMITER ;

--
-- Create table `subject`
--
CREATE TABLE subject (
  ID int NOT NULL AUTO_INCREMENT,
  SubjectName varchar(255) DEFAULT NULL,
  ClassID int DEFAULT NULL,
  CreatedDate datetime DEFAULT NULL,
  CreatedBy varchar(255) DEFAULT NULL,
  ModifiedDate datetime DEFAULT NULL,
  ModifiedBy varchar(255) DEFAULT NULL,
  TenantID varchar(255) DEFAULT NULL,
  PRIMARY KEY (ID)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci,
COMMENT = 'lưu thông tin môn học: ví dụ lớp toán 1';

DELIMITER $$

--
-- Create procedure `Proc_Subject_Update`
--
CREATE PROCEDURE Proc_Subject_Update (IN v_ID int,
IN v_SubjectName varchar(255),
IN v_CreatedDate datetime,
IN v_CreatedBy varchar(255),
IN v_ModifiedDate datetime,
IN v_ModifiedBy varchar(255),
IN v_TenantID varchar(255))
SQL SECURITY INVOKER
COMMENT 'Proc cập nhật bảng subject'
BEGIN
  UPDATE subject
  SET `SubjectName` = v_SubjectName,
      `CreatedDate` = v_CreatedDate,
      `CreatedBy` = v_CreatedBy,
      `ModifiedDate` = v_ModifiedDate,
      `ModifiedBy` = v_ModifiedBy,
      `TenantID` = v_TenantID
  WHERE ID = v_ID
  AND TenantID = v_TenantID;
END
$$

--
-- Create procedure `Proc_Subject_INSERT`
--
CREATE PROCEDURE Proc_Subject_INSERT (IN v_ID int,
IN v_SubjectName varchar(255),
IN v_CreatedDate datetime,
IN v_CreatedBy varchar(255),
IN v_ModifiedDate datetime,
IN v_ModifiedBy varchar(255),
IN v_TenantID varchar(255))
SQL SECURITY INVOKER
COMMENT 'Proc thêm mới bảng subject'
BEGIN
  INSERT INTO subject (`SubjectName`,
  `CreatedDate`,
  `CreatedBy`,
  `ModifiedDate`,
  `ModifiedBy`,
  `TenantID`)
    VALUES (v_SubjectName, v_CreatedDate, v_CreatedBy, v_ModifiedDate, v_ModifiedBy, v_TenantID);
  SELECT
    LAST_INSERT_ID();
END
$$

DELIMITER ;

-- 
-- Dumping data for table topic
--
-- Table platform_elearning.topic does not contain any data (it is empty)

-- 
-- Dumping data for table subject
--
-- Table platform_elearning.subject does not contain any data (it is empty)

-- 
-- Dumping data for table program
--
-- Table platform_elearning.program does not contain any data (it is empty)

-- 
-- Dumping data for table lesson
--
-- Table platform_elearning.lesson does not contain any data (it is empty)

-- 
-- Dumping data for table class
--
-- Table platform_elearning.class does not contain any data (it is empty)

-- 
-- Dumping data for table auditing_log
--
-- Table platform_elearning.auditing_log does not contain any data (it is empty)

-- 
-- Restore previous SQL mode
-- 
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;

-- 
-- Enable foreign keys
-- 
/*!40014 SET FOREIGN_KEY_CHECKS = @OLD_FOREIGN_KEY_CHECKS */;